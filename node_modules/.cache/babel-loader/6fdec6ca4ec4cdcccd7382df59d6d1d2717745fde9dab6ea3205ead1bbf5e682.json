{"ast":null,"code":"var _jsxFileName = \"/Users/ilja_prihach/Desktop/React-TS/Sprint_3/Counter_Redux/src/app/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Counter } from \"../common/components/Counter\";\nimport { Set } from \"../common/components/Set\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let initialStartValueCounter = 0;\n  let initialMaxValueCounter = 5;\n  const initialMaxValue = localStorage.getItem(\"saveMaxValue\") ? JSON.parse(localStorage.getItem(\"saveMaxValue\")) : initialMaxValueCounter;\n  const initialStartValue = localStorage.getItem(\"saveStartValue\") ? JSON.parse(localStorage.getItem(\"saveStartValue\")) : initialStartValueCounter;\n  const [maxValue, setMaxValue] = useState(initialMaxValue);\n  const [startValue, setStartValue] = useState(initialStartValue);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [startValuesInputActive, setStartValuesInputActive] = useState(false);\n  const [maxValueInputActive, setMaxValueInputActive] = useState(false);\n  const [counterChanged, setCounterChanged] = useState(false);\n  const updateValues = (newMaxValue, newStartValue) => {\n    setMaxValue(newMaxValue);\n    setStartValue(newStartValue);\n    setMaxValueInputActive(false);\n    setStartValuesInputActive(false);\n    setCounterChanged(false);\n  };\n  const resetCounterChanged = () => setCounterChanged(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Set, {\n      maxValue: maxValue,\n      startValue: startValue,\n      updateValues: updateValues,\n      setError: setErrorMessage,\n      setMaxValueInputActive: setMaxValueInputActive,\n      setStartValuesInputActive: setStartValuesInputActive,\n      counterChanged: counterChanged,\n      resetCounterChanged: resetCounterChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Counter, {\n      maxValue: maxValue,\n      startValue: startValue,\n      errorMessage: errorMessage,\n      startValuesInputActive: startValuesInputActive,\n      maxValueInputActive: maxValueInputActive,\n      counterHasChanged: () => setCounterChanged(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xcoVqmCPhY7Ik/kjk6JF9VYf47U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Counter","Set","jsxDEV","_jsxDEV","App","_s","initialStartValueCounter","initialMaxValueCounter","initialMaxValue","localStorage","getItem","JSON","parse","initialStartValue","maxValue","setMaxValue","startValue","setStartValue","errorMessage","setErrorMessage","startValuesInputActive","setStartValuesInputActive","maxValueInputActive","setMaxValueInputActive","counterChanged","setCounterChanged","updateValues","newMaxValue","newStartValue","resetCounterChanged","className","children","setError","fileName","_jsxFileName","lineNumber","columnNumber","counterHasChanged","_c","$RefreshReg$"],"sources":["/Users/ilja_prihach/Desktop/React-TS/Sprint_3/Counter_Redux/src/app/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport {Counter} from \"../common/components/Counter\";\nimport {Set}  from \"../common/components/Set\";\n\nfunction App() {\n    let initialStartValueCounter = 0\n    let initialMaxValueCounter = 5\n\n  const initialMaxValue = localStorage.getItem(\"saveMaxValue\")\n      ? JSON.parse(localStorage.getItem(\"saveMaxValue\")!)\n      : initialMaxValueCounter;\n  const initialStartValue = localStorage.getItem(\"saveStartValue\")\n      ? JSON.parse(localStorage.getItem(\"saveStartValue\")!)\n      : initialStartValueCounter;\n  const [maxValue, setMaxValue] = useState<number>(initialMaxValue);\n  const [startValue, setStartValue] = useState<number>(initialStartValue);\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const [startValuesInputActive,  setStartValuesInputActive] = useState(false);\n  const [maxValueInputActive, setMaxValueInputActive] = useState(false);\n  const [counterChanged, setCounterChanged] = useState(false);\n\n  const updateValues = (newMaxValue: number, newStartValue: number) => {\n      setMaxValue(newMaxValue);\n      setStartValue(newStartValue);\n      setMaxValueInputActive(false);\n      setStartValuesInputActive(false)\n      setCounterChanged(false);\n  }\n\n  const resetCounterChanged = () => setCounterChanged(false);\n\n  return (\n    <div className=\"App\">\n      <Set\n          maxValue={maxValue}\n          startValue={startValue}\n          updateValues={updateValues}\n          setError={setErrorMessage}\n          setMaxValueInputActive={setMaxValueInputActive}\n          setStartValuesInputActive={setStartValuesInputActive}\n          counterChanged={counterChanged}\n          resetCounterChanged={resetCounterChanged}\n      />\n      <Counter\n          maxValue={maxValue}\n          startValue={startValue}\n          errorMessage={errorMessage}\n          startValuesInputActive={startValuesInputActive}\n          maxValueInputActive={maxValueInputActive}\n          counterHasChanged={() => setCounterChanged(true)}\n\n      />\n    </div>\n  )\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,WAAW;AAClB,SAAQC,OAAO,QAAO,8BAA8B;AACpD,SAAQC,GAAG,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,IAAIC,wBAAwB,GAAG,CAAC;EAChC,IAAIC,sBAAsB,GAAG,CAAC;EAEhC,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,GACtDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,cAAc,CAAE,CAAC,GACjDH,sBAAsB;EAC5B,MAAMM,iBAAiB,GAAGJ,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,GAC1DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAE,CAAC,GACnDJ,wBAAwB;EAC9B,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAASS,eAAe,CAAC;EACjE,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAASc,iBAAiB,CAAC;EACvE,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAS,EAAE,CAAC;EAC5D,MAAM,CAACqB,sBAAsB,EAAGC,yBAAyB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC5E,MAAM,CAACuB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAM2B,YAAY,GAAGA,CAACC,WAAmB,EAAEC,aAAqB,KAAK;IACjEb,WAAW,CAACY,WAAW,CAAC;IACxBV,aAAa,CAACW,aAAa,CAAC;IAC5BL,sBAAsB,CAAC,KAAK,CAAC;IAC7BF,yBAAyB,CAAC,KAAK,CAAC;IAChCI,iBAAiB,CAAC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMI,mBAAmB,GAAGA,CAAA,KAAMJ,iBAAiB,CAAC,KAAK,CAAC;EAE1D,oBACEtB,OAAA;IAAK2B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB5B,OAAA,CAACF,GAAG;MACAa,QAAQ,EAAEA,QAAS;MACnBE,UAAU,EAAEA,UAAW;MACvBU,YAAY,EAAEA,YAAa;MAC3BM,QAAQ,EAAEb,eAAgB;MAC1BI,sBAAsB,EAAEA,sBAAuB;MAC/CF,yBAAyB,EAAEA,yBAA0B;MACrDG,cAAc,EAAEA,cAAe;MAC/BK,mBAAmB,EAAEA;IAAoB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFjC,OAAA,CAACH,OAAO;MACJc,QAAQ,EAAEA,QAAS;MACnBE,UAAU,EAAEA,UAAW;MACvBE,YAAY,EAAEA,YAAa;MAC3BE,sBAAsB,EAAEA,sBAAuB;MAC/CE,mBAAmB,EAAEA,mBAAoB;MACzCe,iBAAiB,EAAEA,CAAA,KAAMZ,iBAAiB,CAAC,IAAI;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEpD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC/B,EAAA,CAlDQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}