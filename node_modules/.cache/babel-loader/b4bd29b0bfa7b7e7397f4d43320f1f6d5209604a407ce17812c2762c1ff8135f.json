{"ast":null,"code":"var _jsxFileName = \"/Users/ilja_prihach/Desktop/React-TS/Sprint_3/Counter_Redux/src/common/components/Set.tsx\",\n  _s = $RefreshSig$();\nimport { Button } from \"./Button\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Set = ({\n  maxValue,\n  startValue,\n  updateValues,\n  setError,\n  setMaxValueInputActive,\n  setStartValuesInputActive,\n  counterChanged,\n  resetCounterChanged\n}) => {\n  _s();\n  const [localMaxValue, setLocalMaxValue] = useState(maxValue);\n  const [localStartValue, setLocalStartValue] = useState(startValue);\n  const [startValid, setStartValid] = useState(true);\n  const [maxValid, setMaxValid] = useState(true);\n  useEffect(() => {\n    validateInputs();\n  }, [localMaxValue, localStartValue]);\n  const validateInputs = () => {\n    const newMaxValue = localMaxValue;\n    const newStartValue = localStartValue;\n    if (newStartValue >= newMaxValue || newStartValue < 0) {\n      setError(\"Incorrect value\");\n      setMaxValid(false);\n      setStartValid(false);\n    } else {\n      setError(\"\");\n      setMaxValid(true);\n      setStartValid(true);\n    }\n  };\n  const onClickHandlerSave = () => {\n    const newMaxValue = localMaxValue;\n    const newStartValue = localStartValue;\n    updateValues(newMaxValue, newStartValue);\n    setMaxValueInputActive(false);\n    setStartValuesInputActive(false);\n    localStorage.setItem(\"saveMaxValue\", JSON.stringify(newMaxValue));\n    localStorage.setItem(\"saveStartValue\", JSON.stringify(newStartValue));\n  };\n  const conditionsSetDisable = localMaxValue <= localStartValue || localStartValue < 0 || counterChanged;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper_set\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper_setValue\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"max value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: localMaxValue,\n          onFocus: () => setMaxValueInputActive(true),\n          onChange: e => {\n            setLocalMaxValue(+e.target.value);\n            validateInputs();\n            resetCounterChanged();\n          },\n          style: {\n            borderColor: maxValid ? \"#ccc\" : \"red\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"start value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: localStartValue,\n          onFocus: () => setStartValuesInputActive(true),\n          onChange: e => {\n            setLocalStartValue(+e.target.value);\n            validateInputs();\n            resetCounterChanged();\n          },\n          style: {\n            borderColor: startValid ? \"#ccc\" : \"red\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper_button\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        title: \"set\",\n        onClick: onClickHandlerSave,\n        disabled: conditionsSetDisable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(Set, \"ry+Jv4tKAoH9WMoHXykYdjUaRe4=\");\n_c = Set;\nvar _c;\n$RefreshReg$(_c, \"Set\");","map":{"version":3,"names":["Button","useEffect","useState","jsxDEV","_jsxDEV","Set","maxValue","startValue","updateValues","setError","setMaxValueInputActive","setStartValuesInputActive","counterChanged","resetCounterChanged","_s","localMaxValue","setLocalMaxValue","localStartValue","setLocalStartValue","startValid","setStartValid","maxValid","setMaxValid","validateInputs","newMaxValue","newStartValue","onClickHandlerSave","localStorage","setItem","JSON","stringify","conditionsSetDisable","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onFocus","onChange","e","target","style","borderColor","title","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/ilja_prihach/Desktop/React-TS/Sprint_3/Counter_Redux/src/common/components/Set.tsx"],"sourcesContent":["import {Button} from \"./Button\";\nimport {useEffect, useState} from \"react\";\n\ntype SetProps = {\n    maxValue: number;\n    startValue: number;\n    updateValues: (newMaxValue: number, newStartValue: number) => void;\n    setError: (message: string) => void;\n    setMaxValueInputActive: (active: boolean) => void;\n    setStartValuesInputActive:  (active: boolean) => void;\n    counterChanged: boolean;\n    resetCounterChanged: () => void\n}\n\nexport const Set = ({\n    maxValue,\n    startValue,\n    updateValues,\n    setError,\n    setMaxValueInputActive,\n    setStartValuesInputActive,\n    counterChanged,\n    resetCounterChanged\n} : SetProps) => {\n    const [localMaxValue, setLocalMaxValue] = useState(maxValue);\n    const [localStartValue, setLocalStartValue] = useState(startValue);\n    const [startValid, setStartValid] = useState(true);\n    const [maxValid, setMaxValid] = useState(true);\n\n    useEffect(() => {\n        validateInputs();\n    }, [localMaxValue, localStartValue]);\n\n\n    const validateInputs = () => {\n        const newMaxValue = localMaxValue;\n        const newStartValue = localStartValue;\n\n\n        if (newStartValue >= newMaxValue || newStartValue < 0 ) {\n            setError(\"Incorrect value\");\n            setMaxValid(false);\n            setStartValid(false);\n        } else {\n            setError(\"\");\n            setMaxValid(true);\n            setStartValid(true);\n        }\n    };\n\n    const onClickHandlerSave = () => {\n        const newMaxValue = localMaxValue;\n        const newStartValue = localStartValue;\n\n        updateValues(newMaxValue, newStartValue);\n        setMaxValueInputActive(false);\n        setStartValuesInputActive(false);\n\n        localStorage.setItem(\"saveMaxValue\", JSON.stringify(newMaxValue));\n        localStorage.setItem(\"saveStartValue\", JSON.stringify(newStartValue));\n    }\n\n    const conditionsSetDisable = localMaxValue <= localStartValue || localStartValue < 0 || counterChanged\n\n    return (\n        <div className=\"wrapper_set\">\n            <div className=\"wrapper_setValue\">\n                <div>\n                    <span>max value</span>\n                    <input\n                        type=\"number\"\n                        value={localMaxValue}\n                        onFocus = {() => setMaxValueInputActive(true)}\n                        onChange={(e) => {\n                            setLocalMaxValue(+e.target.value)\n                            validateInputs();\n                            resetCounterChanged()\n                        }}\n                        style={{\n                            borderColor: maxValid ? \"#ccc\" : \"red\",\n                        }}\n                    />\n                </div>\n                <div>\n                    <span>start value</span>\n                    <input\n                        type=\"number\"\n                        value={localStartValue}\n                        onFocus = {() => setStartValuesInputActive(true)}\n                        onChange={(e) => {\n                            setLocalStartValue(+e.target.value)\n                            validateInputs();\n                            resetCounterChanged()\n                        }}\n                        style={{\n                            borderColor: startValid ? \"#ccc\" : \"red\",\n                        }}\n                    />\n                </div>\n            </div>\n            <div className=\"wrapper_button\">\n                <Button title={\"set\"} onClick={onClickHandlerSave}\n                        disabled={conditionsSetDisable}\n                />\n            </div>\n        </div>\n\n    )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}