{"ast":null,"code":"var _jsxFileName = \"/Users/ilja_prihach/Desktop/React-TS/Sprint_3/Counter_Redux/src/common/components/Set.tsx\",\n  _s = $RefreshSig$();\nimport { Button } from \"./Button\";\nimport { useEffect } from \"react\";\nimport { useAppDispatch } from \"../hooks/useAppDispatch\";\nimport { useAppSelector } from \"../hooks/useAppSelector\";\nimport { setCount, setCounterChanged, setErrorMessage, setInputActive, setMaxValue, setStartValue } from \"../../features/model/counter-reducer\";\n\n// type SetProps = {\n//     maxValue: number;\n//     startValue: number;\n//     updateValues: (newMaxValue: number, newStartValue: number) => void;\n//     setError: (message: string) => void;\n//     setMaxValueInputActive: (active: boolean) => void;\n//     setStartValuesInputActive:  (active: boolean) => void;\n//     counterChanged: boolean;\n//     resetCounterChanged: () => void\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Set = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const {\n    maxValue,\n    startValue,\n    errorMessage,\n    counterChanged\n  } = useAppSelector(state => state.counter);\n  useEffect(() => {\n    if (startValue >= maxValue || startValue < 0) {\n      dispatch(setErrorMessage(\"Incorrect value\"));\n    } else {\n      dispatch(setErrorMessage(\"\"));\n    }\n  }, [maxValue, startValue, dispatch]);\n  useEffect(() => {\n    const savedMaxValue = localStorage.getItem(\"saveMaxValue\");\n    const savedStartValue = localStorage.getItem(\"saveStartValue\");\n    if (savedMaxValue) {\n      dispatch(setMaxValue(JSON.parse(savedMaxValue)));\n    }\n    if (savedStartValue) {\n      const parsedStartValue = JSON.parse(savedStartValue);\n      dispatch(setStartValue(parsedStartValue));\n      dispatch(setCount(parsedStartValue));\n    }\n  }, [dispatch]);\n  const handleStartValueChange = value => {\n    dispatch(setStartValue(value));\n    dispatch(setInputActive(true));\n    dispatch(setCounterChanged(false));\n  };\n  const handleMaxValueChange = value => {\n    dispatch(setMaxValue(value));\n    dispatch(setInputActive(true));\n    dispatch(setCounterChanged(false));\n  };\n  const handleSave = () => {\n    localStorage.setItem(\"saveMaxValue\", JSON.stringify(maxValue));\n    localStorage.setItem(\"saveStartValue\", JSON.stringify(startValue));\n    dispatch(setInputActive(false));\n    dispatch(setCount(startValue));\n    dispatch(setCounterChanged(false));\n  };\n  const conditionsSetDisable = maxValue <= startValue || startValue < 0 || counterChanged || errorMessage !== \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper_set\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper_setValue\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"max value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: maxValue,\n          onFocus: () => dispatch(setInputActive(true)),\n          onChange: e => handleMaxValueChange(+e.target.value),\n          style: {\n            borderColor: errorMessage ? \"#ccc\" : \"red\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"start value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: startValue,\n          onFocus: () => dispatch(setInputActive(true)),\n          onChange: e => handleStartValueChange(Number(e.target.value)),\n          style: {\n            borderColor: errorMessage ? \"red\" : \"#ccc\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper_button\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        title: \"set\",\n        onClick: handleSave,\n        disabled: conditionsSetDisable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(Set, \"JdDFJfqBNcJn5gAtmW14YqdZW9M=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n_c = Set;\nvar _c;\n$RefreshReg$(_c, \"Set\");","map":{"version":3,"names":["Button","useEffect","useAppDispatch","useAppSelector","setCount","setCounterChanged","setErrorMessage","setInputActive","setMaxValue","setStartValue","jsxDEV","_jsxDEV","Set","_s","dispatch","maxValue","startValue","errorMessage","counterChanged","state","counter","savedMaxValue","localStorage","getItem","savedStartValue","JSON","parse","parsedStartValue","handleStartValueChange","value","handleMaxValueChange","handleSave","setItem","stringify","conditionsSetDisable","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onFocus","onChange","e","target","style","borderColor","Number","title","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/ilja_prihach/Desktop/React-TS/Sprint_3/Counter_Redux/src/common/components/Set.tsx"],"sourcesContent":["import {Button} from \"./Button\";\nimport {useEffect, useState} from \"react\";\nimport {useAppDispatch} from \"../hooks/useAppDispatch\";\nimport {useAppSelector} from \"../hooks/useAppSelector\";\nimport {\n    setCount, setCounterChanged,\n    setErrorMessage,\n    setInputActive,\n    setMaxValue,\n    setStartValue\n} from \"../../features/model/counter-reducer\";\n\n// type SetProps = {\n//     maxValue: number;\n//     startValue: number;\n//     updateValues: (newMaxValue: number, newStartValue: number) => void;\n//     setError: (message: string) => void;\n//     setMaxValueInputActive: (active: boolean) => void;\n//     setStartValuesInputActive:  (active: boolean) => void;\n//     counterChanged: boolean;\n//     resetCounterChanged: () => void\n// }\n\nexport const Set = () => {\n    const dispatch = useAppDispatch();\n    const {\n        maxValue,\n        startValue,\n        errorMessage,\n        counterChanged\n    } = useAppSelector((state) => state.counter);\n\n    useEffect(() => {\n        if (startValue >= maxValue || startValue < 0) {\n            dispatch(setErrorMessage(\"Incorrect value\"));\n        } else {\n            dispatch(setErrorMessage(\"\"));\n        }\n    }, [maxValue, startValue, dispatch]);\n\n    useEffect(() => {\n        const savedMaxValue = localStorage.getItem(\"saveMaxValue\");\n        const savedStartValue = localStorage.getItem(\"saveStartValue\");\n\n        if (savedMaxValue) {\n            dispatch(setMaxValue(JSON.parse(savedMaxValue)));\n        }\n        if (savedStartValue) {\n            const parsedStartValue = JSON.parse(savedStartValue);\n            dispatch(setStartValue(parsedStartValue));\n            dispatch(setCount(parsedStartValue));\n        }\n    }, [dispatch]);\n\n    const handleStartValueChange = (value: number) => {\n        dispatch(setStartValue(value));\n        dispatch(setInputActive(true));\n        dispatch(setCounterChanged(false));\n    };\n\n    const handleMaxValueChange = (value: number) => {\n        dispatch(setMaxValue(value));\n        dispatch(setInputActive(true));\n        dispatch(setCounterChanged(false));\n    };\n\n    const handleSave = () => {\n        localStorage.setItem(\"saveMaxValue\", JSON.stringify(maxValue));\n        localStorage.setItem(\"saveStartValue\", JSON.stringify(startValue));\n\n        dispatch(setInputActive(false));\n        dispatch(setCount(startValue));\n        dispatch(setCounterChanged(false));\n    };\n\n    const conditionsSetDisable =\n        maxValue <= startValue ||\n        startValue < 0 ||\n        counterChanged ||\n        errorMessage !== \"\";\n\n    return (\n        <div className=\"wrapper_set\">\n            <div className=\"wrapper_setValue\">\n                <div>\n                    <span>max value</span>\n                    <input\n                        type=\"number\"\n                        value={maxValue}\n                        onFocus = {() => dispatch(setInputActive(true))}\n                        onChange={(e) => handleMaxValueChange(+e.target.value)}\n                        style={{\n                            borderColor: errorMessage ? \"#ccc\" : \"red\",\n                        }}\n                    />\n                </div>\n                <div>\n                    <span>start value</span>\n                    <input\n                        type=\"number\"\n                        value={startValue}\n                        onFocus = {() => dispatch(setInputActive(true))}\n                        onChange={(e) => handleStartValueChange(Number(e.target.value))}\n                        style={{\n                            borderColor: errorMessage ? \"red\" : \"#ccc\",\n                        }}\n                    />\n                </div>\n            </div>\n            <div className=\"wrapper_button\">\n                <Button\n                    title={\"set\"}\n                    onClick={handleSave}\n                    disabled={conditionsSetDisable}\n                />\n            </div>\n        </div>\n\n    )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}